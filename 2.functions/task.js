//блок Основы JS, тема Функции
//Задача 1 

function getArrayParams(...arr) {
  let min = Infinity;// Инициализируем переменные min, max и sum
  let max = -Infinity;
  let sum = 0;
  let avg;

  for (let i = 0; i < arr.length; i++) {// Проходим по массиву и находим минимум, максимум и сумму элементов
    if (arr[i] < min) {// Находим минимум
      min = arr[i];
    }
    if (arr[i] > max) {// Находим максимум
      max = arr[i];
    }

    sum += arr[i]; // Суммируем элементы для вычисления среднего значения
  }

  avg = Number((sum / arr.length).toFixed(2));// Вычисляем среднее значение 

  return { min: min, max: max, avg: avg };// Округляем среднее значение до двух знаков после запятой и возвращаем объект с результатами
}

//Задача 2.1

function summElementsWorker(...arr) {//Пишим  функцию summElementsWorker, которая должна находить сумму элементов массива и возвращать её, при этом элементы массива или равны нулю или более , используем оператор расширения ...
// Если массив пустой, сразу вернем 0
  if (arr.length === 0) {//При длине массива абсолютно раное 0 возвращаем 0
    return 0;
  }
  
  let min = Math.min(...arr);// Используем метод Math.min чтобы найти минимальное значение
  let max = Math.max(...arr);// Используем метод Math.max чтобы найти максимальное значение
  let sum = arr.reduce((acc, curr) => acc + curr, 0);//Используем метод reduce для нахождения суммы элементов массива и стрелочную функцию для упрощения записи
  
  return sum;
}

//Задача 2.2

function differenceMaxMinWorker(...arr) {//Пишем  функцию differenceMaxMinWorker для вычисления разницы максимального и минимального элементов.
  if (arr.length === 0) {//При длине массива абсолютно раное 0 возвращаем 0
    return 0;
  }

  let min = Math.min(...arr);// Используем метод Math.min чтобы найти минимальное значение
  let max = Math.max(...arr);// Используем метод Math.max чтобы найти максимальное значение
  let difference = max - min;// Находим разницу и возвращаем это значение

  return difference;
}

//Задача 2.3

function differenceEvenOddWorker(...arr) {//Пишем функцию differenceEvenOddWorker вычисления разницы сумм чётных и нечётных элементов
  if (arr.length === 0) {//При длине массива абсолютно раное 0 возвращаем 0
    return 0;
  }

  let sumEvenElement = 0; // Сумма четных элементов- вот тут не поняла?
  let sumOddElement = 0; // Сумма нечетных элементов - вот тут не поняла зачем мы делаем такие переменне

  for (let i = 0; i < arr.length; i++) {//Цикл для перебора массива на увеличение
    if (arr[i] % 2 === 0) {// Берем остаток, если он абсолютно равен 0, то это четный элемент
      sumEvenElement += arr[i]; //Если элемент четный, то увеличиваем на один
    } else {
      sumOddElement += arr[i]; //В противном случае выводим нечетные увеличиваем на один
    }
  }
}
  return sumEvenElement - sumOddElement; //Выводи разницу четных и нечетных

//Задача 2.4

function averageEvenElementsWorker(...arr) {//Пишем функцию averageEvenElementsWorker, которая будет вычислять среднее значение чётных элементов
  if (arr.length === 0) {//При длине массива абсолютно раное 0 возвращаем 0
    return 0;
  }
  
  let sumEvenElement = 0;//Вот опять не поняла эту запись?
  let countEvenElement = 0;// Тоже не поняла, почему мы присваиваем 0?

  for (let i = 0; i < arr.length; i++) {//Цикл для перебора массива на увеличение
    if (arr[i] % 2 === 0) {//Применяем оператор нахождения остатка для нахождения четного элемента
      sumEvenElement += arr[i];//Если элемент четный увеличиваем на один
      countEvenElement +=1; // Эту запись не поняла?
    }
  }

  return sumEvenElement / countEvenElement; //Находим среднее значение четных и нечетных путем деления, четных на /нечетные

}

//Задача 3

let maxWorkerResult = -Infinity; // п.2// присваиваем минимальное числовое значение-это понятно

for (let i = 0; i < arrOfArr.length; i++) { // цикл перебора элементов массива, п.3 
  const maxFunctionResult = func(...arrOfArr[i]); // сначала вызывается ф-ия, имя которой передали, ей на вход передаётся текущий массив, который разворачивается в строку его элементов. Сделано это для того, что ф-ии, написанные ранее, принимают на вход неопределённое кол-во аргументов и собирают их в массив, с которым и работают внутри. п.4// 
  
  if (maxFunctionResult > maxWorkerResult) { // выявление максимального значения, п.5 Проверяем, является ли полученное значение больше текущего максимального значения
    maxWorkerResult = maxFunctionResult; // п.6
  }
}
//console.log(maxWorkerResult); // необязательная строка, можно удалить.
return maxWorkerResult; // п.7


const arr = [[10, 10, 11, 20, 10], [67, 10, 2, 39, 88], [72, 75, 51, 87, 43], [30, 41, 55, 96, 62]];

makeWork(arr, summElementsWorker);


